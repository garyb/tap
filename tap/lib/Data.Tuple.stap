(module Data.Tuple)

; -----------------------------------------------------------------------------
; - Tuple types ---------------------------------------------------------------
; -----------------------------------------------------------------------------

(data (Tuple2 a b) (Tuple2 a b))
(data (Tuple3 a b c) (Tuple3 a b c))
(data (Tuple4 a b c d) (Tuple4 a b c d))
(data (Tuple5 a b c d e) (Tuple5 a b c d e))
(data (Tuple6 a b c d e f) (Tuple6 a b c d e f))
(data (Tuple7 a b c d e f g) (Tuple7 a b c d e f g))
(data (Tuple8 a b c d e f g h) (Tuple8 a b c d e f g h))
(data (Tuple9 a b c d e f g h i) (Tuple9 a b c d e f g h i))
(data (Tuple10 a b c d e f g h i j) (Tuple10 a b c d e f g h i j))

; -----------------------------------------------------------------------------
; - Pairs (2-tuples) ----------------------------------------------------------
; -----------------------------------------------------------------------------

(def fst (-> '(a b) a))
(let fst (lambda (t) (match t (case '(x _) x))))

(def snd (-> '(a b) b))
(let snd (lambda (t) (match t (case '(_ x) x))))

(def swap (-> '(a b) '(b a)))
(let swap (lambda (t) (match t (case '(x y) '(y x)))))